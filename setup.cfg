#                              _
#                           _ooOoo_
#                          o8888888o
#                          88" . "88
#                          (| -_- |)
#                          O\  =  /O
#                       ____/`---"\____
#                     ."  \\|     |//  `.
#                    /  \\|||  :  |||//  \
#                   /  _||||| -:- |||||_  \
#                   |   | \\\  -  /"| |   |
#                   | \_|  `\`---"//  |_/ |
#                   \  .-\__ `-. -"__/-.  /
#                 ___`. ."  /--.--\  `. ."___
#              ."" "<  `.___\_<|>_/___." _> \"".
#             | | :  `- \`. ;`. _/; ."/ /  ." ; |
#             \  \ `-.   \_\_`. _."_/_/  -" _." /
#   ===========`-.`___`-.__\ \___  /__.-"_."_.-"================
#                           `=--=-"
#

[metadata]
name                          = edge_tss
version                       = 1.0.0
description                   = Developing a state-of-the-art traffic surveillance system on edge devices for real-time information extraction under various weather conditions
long_description              = file: README.md
long_description_content_type = text/markdown
license                       = MIT License
license_files                 = LICENSE.txt
author                        = Long H. Pham
author_email                  = longpham3105@gmail.com
url                           = https://github.com/phlong3105/Edge-TSS
project_urls =
    Bug Reports = https://github.com/phlong3105/Edge-TSS/issues
    Source = https://github.com/phlong3105/Edge-TSS
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3 :: Only
keywords   =
    computer vision
    image processing
    machine learning

[options]
include_package_data = True
package_dir =
    =src
packages=find:
python_requires  = >=3.9

[options.packages.find]
where=src

[options.package_data]
* = pretrained/**/*
